name: Push

on:
  push:
    branches:
      - master

jobs:
  releasetag:
    runs-on: ubuntu-latest
    needs: [testapi, eslint, testfrontend]
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      SENTRY_DEPLOY_ENVIRONMENT: ${{ secrets.SENTRY_DEPLOY_ENVIRONMENT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - uses: actions/cache@v2
        with:
          path: "/usr/lib/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.lock') }}
      - name: Install dependencies
        run: npm install -g semantic-release @semantic-release/git
      - name: Create Release Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  testapi:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.13.1"
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download dependencies
        run: |
          go mod download
      - name: Test the app
        run: |
          go test -v ./...

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.lock') }}
      - name: Install modules
        run: |
          cd frontend 
          npm i
      - name: Run ESLint
        run: npx eslint . --ext .js,.jsx,.ts,.tsx

  testfrontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.lock') }}
      - name: Install modules
        run: |
          cd frontend 
          npm i
      - name: Run Tests
        run: |
          cd frontend
          npm test -- --watchAll=false
