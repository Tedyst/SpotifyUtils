basePath: /api
consumes:
- application/json
definitions:
  Playlist:
    properties:
      ID:
        type: string
      Name:
        type: string
    type: object
    x-go-package: github.com/tedyst/spotifyutils/userutils
  UserSettings:
    properties:
      RecentTracks:
        type: boolean
    type: object
    x-go-package: github.com/tedyst/spotifyutils/userutils
  authAPIRequest:
    properties:
      Code:
        description: The code of the request
        example: asd
        type: string
      Host:
        description: The host of the request
        example: https://localhost:8080
        type: string
    required:
    - Host
    - Code
    type: object
    x-go-package: github.com/tedyst/spotifyutils/auth
  response:
    properties:
      Image:
        type: string
      Playlists:
        items:
          $ref: '#/definitions/Playlist'
        type: array
      Settings:
        $ref: '#/definitions/UserSettings'
      Success:
        type: boolean
      UserID:
        type: string
      Username:
        type: string
    type: object
    x-go-package: github.com/tedyst/spotifyutils/api/status
  responseError:
    properties:
      Error:
        description: The error message
        example: Error
        type: string
      Success:
        description: The state of the response
        example: false
        type: boolean
    type: object
    x-go-package: github.com/tedyst/spotifyutils/api/utils
host: localhost:5000
info:
  description: Documentation of SpotifyUtils
  version: 1.0.0
paths:
  /auth:
    post:
      consumes:
      - application/json
      operationId: authAPIRequest
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/authAPIRequest'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/authAPIResponse'
        default:
          $ref: '#/responses/Error'
      tags:
      - auth
  /auth-url:
    get:
      consumes:
      - application/json
      operationId: authURLAPIRequest
      parameters:
      - example: spotify.stoicatedy.ovh
        in: query
        name: host
        type: string
        x-go-name: Host
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/authURLAPIResponse'
        default:
          $ref: '#/responses/Error'
      tags:
      - auth
  /logout:
    get:
      consumes:
      - application/json
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/authAPIResponse'
        default:
          $ref: '#/responses/Error'
      tags:
      - auth
  /status:
    get:
      operationId: status
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/statusAPIResponse'
        default:
          $ref: '#/responses/Error'
produces:
- application/json
responses:
  Error:
    description: ""
    schema:
      $ref: '#/definitions/responseError'
  authAPIResponse:
    description: ""
    headers:
      Success:
        description: The state of the authentication
        type: boolean
  authURLAPIResponse:
    description: ""
    headers:
      Success:
        description: The state of the response
        example: true
        type: boolean
      URL:
        description: The URL where the user needs to login
        example: https://spotify.com/oauth2?asd
        type: string
  statusAPIResponse:
    description: ""
    schema:
      $ref: '#/definitions/response'
schemes:
- http
- https
security:
- CSRFToken:
  - '[]'
securityDefinitions:
  CSRFToken:
    in: header
    name: x-csrf-token
    type: apiKey
swagger: "2.0"
